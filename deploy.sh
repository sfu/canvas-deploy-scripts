#!/usr/bin/env bash

#
# Script for deploying a Canvas release to a Canvas application
# or management server
#
# Usage:
#  ./deploy.sh -r <release-name> [-f]
#
# Arguments:
#   <release-name>: typically generated by Bamboo, determines
#                   where the release will be installed
#

set -e
set -u
set -o pipefail

# Default options
FORCE=false
CANVAS_ROOT=/var/rails/canvas/releases
CANVAS_ENV=
RELEASE=

usage () {
  echo "usage: $(basename "$0") -e <environment> -r <path> [-f]"
  echo -e "\nDeploys a Canvas release to an application or management server."
  echo -e "\nOptions:"
  echo -e "    -r <path>    The target installation path. Path must not already exist unless using -f"
  echo -e "    -f           Force installation to the target path. Target will be removed and replaced."
  echo -e "    -h           Show this help, then exit\n"
}

getenv() {
  # determine the environment from the hostname
  shortenv=$(hostname -s | sed -e 's/lcp-canvas-[am]//' | sed -e 's/[0-9]\+//')
  case "$shortenv" in
    p)
      CANVAS_ENV="production"
    ;;
    s)
      CANVAS_ENV="stage"
    ;;
    t)
      CANVAS_ENV="test"
    ;;
    *)
      echo "ERROR: could not determine Canvas environment from hostname. Are you running on a Canvas server?"
      exit 1
  esac
}

preflight() {
  getenv
  # check if the release exists
  echo "Performing Pre-flight Checks"
  printf "Release tarball exists? "
  if [ -f "/usr/local/canvas/deploy-release-$CANVAS_ENV/canvas.tar" ]; then
    printf "yes\n"
  else
    printf "no\n"
    echo "Aborting - no release tarball."
    exit 1
  fi
  
  # check if release directory exists; bail if true && !FORCE
  echo "Release directory exists? "
  if [ -d "$CANVAS_ROOT"/"$RELEASE" ] ; then
    if [ ! $FORCE ] ; then
      printf "yes\n"
      echo "Aborting - release directory already exists"
      exit 1
    else
      printf "yes - but using force mode"
    fi
  fi
}

create_release_dir() {
  echo "hi"
}

while getopts ':fhr:' OPTION ; do
  case "$OPTION" in
    f)
      FORCE=true
    ;;
    h)
      usage
      exit 0
    ;;
    r)
      if [ -z "$OPTARG" ] ; then
        usage
        exit 1
      fi
      RELEASE="$OPTARG"
    ;;
    ?)
      usage
      exit 1
    ;;
  esac
done

if [ -z "$RELEASE" ] ; then
  usage
  exit 1
fi

# echo "Deploying Canvas release to $CANVAS_ROOT/$RELEASE"

preflight